@model PagedList.IPagedList<Core.Models.Relatorios.RelatorioBonusPagosModel>
@using PagedList.Mvc;
@{
    #region Layout
    Layout = "~/Views/Shared/_Layout.cshtml";
    #endregion

    #region ViewBags
    var traducaoHelper = (Core.Helpers.TraducaoHelper)ViewBag.TraducaoHelper;
    ViewBag.Title = traducaoHelper["BONIFICACAO"];
    #endregion

    #region Variaveis

    var moedaPadrao = Core.Helpers.ConfiguracaoHelper.GetMoedaPadrao();

    #endregion
}

@section pageStyles {
    @Styles.Render("~/Content/dateRangePicker")
    @Styles.Render("~/Content/sweetAlert")

    <link href="~/Content/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
}

@section head {
}

@section pageScripts {
    @Scripts.Render("~/scripts/dataPicker")

    <script src="~/Content/global/plugins/select2/js/select2.full.min.js" type="text/javascript"></script>
}

@section PageLevelScripts {
    @Scripts.Render("~/scripts/dataTimePickerComponent")


    <script type="text/javascript">
        var usuarioIDsInput = $("#UsuarioIDs");
        var usuarioIDs = usuarioIDsInput.val().split(',');

        function formatRepoSelection(repo) {
            usuarioIDs.push(repo.id)
            usuarioIDs = Array.from(new Set(usuarioIDs));
            setUsuarioIDsInput()
            return repo.full_name || repo.text;
        }

        function setUsuarioIDsInput() {
            var value = '';
            var coma = '';
            for(let i of usuarioIDs)
            {
                value += coma + i;
                coma = ',';
            }
            usuarioIDsInput.val(value);
        }

        //$('.js-data-example-ajax').on('select2:unselect', function (e) {
        //    var value =  e.params.data.id
        //    usuarioIDs = usuarioIDs.filter(item => item !== value);
        //    setUsuarioIDsInput();
        //});

        $('.js-data-example-ajax').select2({
            ajax: {
                url: "@Url.Action("GetUsuarios", "Relatorios")",
                dataType: 'json',
                delay: 250,
                data: function(params) {
                        return {
                            search: params.term // , // search term
                            //page: params.page
                        };
                },
                processResults: function (data) { //, page) {
                    return {
                        results: data,
                        pagination: {
                            more: true
                        }
                    };
                },
                cache: true
            },
            escapeMarkup: function(markup) {
                return markup;
            }, // let our custom formatter work
            minimumInputLength: 3,
            templateResult: formatRepo,
            templateSelection: formatRepoSelection,
            language: {
                errorLoading:    function ()  { return '@traducaoHelper["O_RESULTADO_NAO_PODE_SER_LIDO"]';},
                inputTooLong:    function (e) { var t = e.input.length - e.maximum, n = '@traducaoHelper["POR_FAVOR_APAGUE_X_CARACTERES"]'.replace('{0}', t); return n },
                inputTooShort:   function (e) { var t = e.minimum - e.input.length, n = '@traducaoHelper["LOGIN"]' + ' - ' + '@traducaoHelper["POR_FAVOR_ENTRE_COM_X_OU_MAIS_CARACTERES"]'.replace('{0}', t); return n },
                loadingMore:     function ()  { return '@traducaoHelper["LENDO_MAIS_RESULTADOS"]'; },
                maximumSelected: function (e) { return '@traducaoHelper["VOCE_SO_PODE_SELECIONAR_X_ITENS"]'.replace('{0}', e.maximum);},
                noResults:       function ()  { return '@traducaoHelper["NENHUM_RESULTADO_ENCONTRADO"]'; },
                searching:       function ()  { return '@traducaoHelper["PESQUISANDO"]'; }
            }
        });

        $('.js-data-example-ajax').val([1945, 2253]);
        $('.js-data-example-ajax').trigger('change');

        var items = @(ViewBag.UsuariosJson == null ? "[]" : Html.Raw(ViewBag.UsuariosJson));

        for(var item of items) {
            let newOption = new Option(item.Name, item.id, false, true);
            $('.js-data-example-ajax').append(newOption).trigger('change');
        }

        function formatRepo(repo) {
            if (repo.loading) return repo.text;

            var markup =
                "<div class='select2-result-repository clearfix'>" +
                //"<div class='select2-result-repository__avatar'><img src='" + repo.owner.avatar_url + "' /></div>" +
                "<div class='select2-result-repository__meta'>" +
                "<div class='select2-result-repository__title'>" + repo.text + "</div>";
            return markup;
         }
    </script>
}

@section jQueryRead {
}

<div class="portlet box grey-gallery">

    <div class="portlet-title">
        <div class="caption"><i class="fa fa-reorder"></i> @traducaoHelper["BONIFICACOES_PAGAS"]</div>
        <div class="tools">
            <a href="javascript:;" class="collapse" title="@traducaoHelper["FECHAR"]" />
            <a href='@Url.Action("Reload", "relatorios", new {@acao = "bonuspagos"})' class="atualizar" title="@traducaoHelper["RELER"]" />
        </div>
        <div class="actions">
            <a href='@Url.Action("bonusPagosExcel", "relatorios", new { ProcuraDtIni = ViewBag.CurrentProcuraDtIni, ProcuraDtFim = ViewBag.CurrentProcuraDtFim , ProcuraUsuario = ViewBag.CurrentProcuraUsuario, ProcuraCategoria = ViewBag.CurrentProcuraCategoria} )' class="btn btn-sm yellow-casablanca">
                <i class="fa fa-file-excel-o"></i> Excel
            </a>
            <label>&nbsp;</label>
        </div>
    </div>

    <div class="portlet-body">
        <div class="table-toolbar">
            <div class="row">
                @using (Html.BeginForm("bonusPagos", "relatorios", FormMethod.Get))
                {
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.DropDownList("NumeroPaginas", null, htmlAttributes: new { @class = "form-control input-small input-inline marginB05", @style = "width:70px !important;" })
                                <input class="btn purple form-control input-small input-inline fontPlaceHolderIcon" id="Atualizar" name="Atualizar" value="&#xf021; @traducaoHelper["ATUALIZAR"]" type="submit" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="pull-right">

                            <div class="form-group input-group">

                                <div>
                                    <select id="ProcuraUsuario" name="ProcuraUsuario" class="form-control js-data-example-ajax"></select>
                                    <input type="hidden" name="UsuarioIDs" id="UsuarioIDs" value="@ViewBag.Usuarios" />
                                </div>

                                @Html.DropDownList("ProcuraCategoria", null, htmlAttributes: new { @class = "form-control input-small input-small fontPlaceHolderIcon marginB05 ", @placeholder = traducaoHelper["CATEGORIA"], @title = traducaoHelper["CATEGORIA"], @style = "margin: 5px 10px 5px 0 !important;" })

                                <div class="input-group date-picker input-daterange " data-date="10/11/2012" data-date-format="dd/mm/yyyy" style="margin: 5px 0 0 0 !important;">
                                    @Html.TextBox("ProcuraDtIni", ViewBag.CurrentProcuraDtIni as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @autocomplete = "off", @style = "width:120px !important;" })
                                    @Html.Label("LabelAte", traducaoHelper["ATE"], new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @style = "background-color:#ddd; width:55px !important; padding: 6px 12px; font-size:14px !important; text-align:center !important;" })
                                    @Html.TextBox("ProcuraDtFim", ViewBag.CurrentProcuraDtFim as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @autocomplete = "off", @style = "width:120px !important;" })
                                </div>

                                <input class="btn blue-madison form-control input-small input-inline fontPlaceHolderIcon" id="Procura" name="Procura" value="&#xf002; @traducaoHelper["PROCURAR"]" type="submit" />
                            </div>
                        </div>
                    </div>

                    @*<div class="col-md-8">
                        <div class="pull-right">
                            <div class="input-group date-picker input-daterange " data-date="10/11/2012" data-date-format="dd/mm/yyyy">
                                @Html.TextBox("ProcuraDtIni", ViewBag.CurrentProcuraDtIni as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @autocomplete = "off", @style = "width:120px !important;" })
                                @Html.Label("LabelAte", traducaoHelper["ATE"], new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @style = "background-color:#ddd; width:55px !important; padding: 6px 12px; font-size:14px !important; text-align:center !important;" })
                                @Html.TextBox("ProcuraDtFim", ViewBag.CurrentProcuraDtFim as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @autocomplete = "off", @style = "width:120px !important;" })
                            </div>
                            <div class="form-group input-group ">
                                @Html.DropDownList("ProcuraCategoria", null, htmlAttributes: new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["CATEGORIA"], @title = traducaoHelper["CATEGORIA"] })
                                <div>
                                    <select id="ProcuraUsuario" name="ProcuraUsuario" class="form-control js-data-example-ajax"></select>
                                    <input type="hidden" name="UsuarioIDs" id="UsuarioIDs" value="@ViewBag.Usuarios" />
                                </div>*@
                    @*@Html.TextBox("ProcuraLogin", ViewBag.CurrentProcuraLogin as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["LOGIN"] })*@
                    @*<input class="btn blue-madison form-control input-small input-inline fontPlaceHolderIcon" id="Procura" name="Procura" value="&#xf002; @traducaoHelper["PROCURAR"]" type="submit" />
                                </div>
                            </div>
                        </div>*@
                }
            </div>

            <div class="row">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("bonusPagos", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraNome = ViewBag.CurrentProcuraNome, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"] @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"] @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

        <div class="table-scrollable">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["USUARIO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["DATA"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["BONIFICACAO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["VALOR"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ATIVO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ASSOCIACAO"]&nbsp;</th>


                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["DESCRICAO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["PEDIDO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["LOGIN"]&nbsp;</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["USUARIO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["DATA"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["BONIFICACAO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["VALOR"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ATIVO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ASSOCIACAO"]&nbsp;</th>

                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["DESCRICAO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["PEDIDO"]&nbsp;</th>
                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["LOGIN"]&nbsp;</th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        switch (item.tipoRg)
                        {
                            case 1:
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.login) </td>
                                        <td>@Html.DisplayFor(modelItem => item.data) </td>
                                        <td>@Html.DisplayFor(modelItem => item.categoriaNome) </td>
                                        <td class="text-right">@moedaPadrao.Simbolo @item.valor.ToString(moedaPadrao.MascaraOut)</td>
                                        <td>
                                            @if (item.ativo == 0)
                                            {
                                                @traducaoHelper["SIM"];
                                            }
                                            else
                                            {
                                                @traducaoHelper["NAO"];
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.nivelAssociacao) </td>
                                        @*<td>@Html.DisplayFor(modelItem => item.descricao) </td>*@

                                        @if (item.descricao != null)
                                        {
                                            <td>
                                                @(item.descricao.Replace("[PA]", @traducaoHelper["PATROCINADOR"])
                                                                .Replace("[NA]", @traducaoHelper["NIVEL_ASSOCIACAO"])
                                                                .Replace("[PR]", @traducaoHelper["PRODUTO"])
                                                                .Replace("[NP]", @traducaoHelper["NIVEL_PAGO"])
                                                                .Replace("[PT]", @traducaoHelper["PONTOS"])
                                                                .Replace("[VM]", @traducaoHelper["VALOR_MIGRADO"])
                                                                .Replace("[VP]", @traducaoHelper["VALOR_PACOTE"])
                                                                .Replace("[VE]", @traducaoHelper["VALOR_PEDIDO"])
                                                                .Replace("[TX]", @traducaoHelper["TAXA"]))
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }

                                        <td>@Html.DisplayFor(modelItem => item.pedidoID) </td>
                                        <td>@Html.DisplayFor(modelItem => item.loginPedido) </td>
                                    </tr>
                                }
                                break;
                            case 2:
                                {
                                    <tr>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> <b>@traducaoHelper["TOTAL"] @item.login</b> </td>
                                        <td bgcolor="Gainsboro" class="text-right cm-strong"><b>@moedaPadrao.Simbolo @item.valor.ToString(moedaPadrao.MascaraOut)</b></td>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> </td>
                                        <td bgcolor="Gainsboro"> </td>
                                    </tr>
                                }
                                break;
                            case 9:
                                {
                                    <tr>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> <b>@traducaoHelper["TOTAL_GERAL"]</b></td>
                                        <td bgcolor="silver" class="text-right"><b>@moedaPadrao.Simbolo @item.valor.ToString(moedaPadrao.MascaraOut)</b></td>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> </td>
                                        <td bgcolor="silver"> </td>
                                    </tr>
                                }
                                break;
                        }
                    }
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="border-gridFooter">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("bonusPagos", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraNome = ViewBag.CurrentProcuraNome, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"]  @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"]  @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

    </div>

</div>
