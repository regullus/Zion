@model PagedList.IPagedList<Core.Entities.Aviso>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var traducaoHelper = (Core.Helpers.TraducaoHelper)ViewBag.TraducaoHelper;
}

<div class="portlet box grey-gallery">

    <div class="portlet-title">
        <div class="caption"><i class="fa fa-reorder"></i> @traducaoHelper["AVISO"]</div>
        <div class="tools">
            <a href="javascript:;" class="collapse" title="@traducaoHelper["FECHAR"]" />
        </div>
        <div class="actions">
            <a href='@Url.Action("Create", "Avisos")' class="btn green-meadow">
                <i class="fa fa-plus"></i> @traducaoHelper["NOVO"]
            </a>

            <label>&nbsp;</label>
        </div>
    </div>

    <div class="portlet-body">

        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group">
                            @using (Html.BeginForm("Index", "Avisos", FormMethod.Get))
                            {
                                @Html.DropDownList("NumeroPaginas", null, htmlAttributes: new { @class = "form-control input-small input-inline marginB05" })
                                <input class="btn purple form-control input-small input-inline fontPlaceHolderIcon" id="Atualizar" name="Atualizar" value="&#xf021; @traducaoHelper["ATUALIZAR"]" type="submit" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    @using (Html.BeginForm("Index", "Avisos", FormMethod.Get))
                    {
                        <div class="form-group pull-right">
                            <div class="input-group">
                                @Html.TextBox("ProcuraDescricao", ViewBag.CurrentProcuraDescricao as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["TITULO"] })
                                <input class="btn blue-madison form-control input-small input-inline fontPlaceHolderIcon" id="Procura" name="Procura" value="&#xf002; @traducaoHelper["PROCURAR"]" type="submit" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraDescricao = ViewBag.CurrentProcuraDescricao, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"] @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"] @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

        <div class="table-scrollable">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>

                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ACOES"]&nbsp;</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["TITULO"], "Index", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraTitulo = ViewBag.CurrentProcuraTitulo, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "Titulo":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "Titulo_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["VIDEO"]</th>
                        <th scope="col">@traducaoHelper["TIPO"]</th>
                        <th scope="col">@traducaoHelper["URGENTE"]</th>
                        <th scope="col">@traducaoHelper["INICIO"]</th>
                        <th scope="col">@traducaoHelper["FIM"]</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>

                        <th scope="col" style="min-width:80px; width:80px;">&nbsp;@traducaoHelper["ACOES"]&nbsp;</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["TITULO"], "Index", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraDescricao = ViewBag.CurrentProcuraDescricao, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "Titulo":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "Titulo_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["VIDEO"]</th>
                        <th scope="col">@traducaoHelper["TIPO"]</th>
                        <th scope="col">@traducaoHelper["URGENTE"]</th>
                        <th scope="col">@traducaoHelper["DATA_INICIO"]</th>
                        <th scope="col">@traducaoHelper["DATA_FIM"]</th>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink("Edit", "Create", new { id = item.ID }, new { @class = "gridEdit", title = traducaoHelper["EDITAR"] })
                                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "gridDetail", title = traducaoHelper["DETALHES"] })
                                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "gridDelete", title = traducaoHelper["EXCLUIR"] })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Titulo)
                            </td>
                            <td align="center">
                                @if (!string.IsNullOrEmpty(item.Video))
                                {
                                    <img src="~/Content/img/icon/youtube.png" width="35" onclick="showVideo('@item.Titulo','@item.Video')" style="cursor:pointer" />
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.AvisoTipo.Nome)
                            </td>
                            <td align="center">

                                @if(item.Urgente)
                                {
                                    <img src="~/Content/img/icon/check-64.png" width="20" />
                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataInicio)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataFim)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="border-gridFooter">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraDescricao = ViewBag.CurrentProcuraDescricao, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"]  @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"]  @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>
    </div>
</div>



<div id="video-modal" class="modal" data-easein="tada" data-easeout="rollOut" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="titulo-video"></h4>
            </div>
            <div class="modal-body">
                <iframe id="iframe-video" width="420" height="315" src=""></iframe>
            </div>
        </div>
    </div>
</div>

@section pageScripts {


    <script type="text/javascript">

        function showVideo(titulo, url) {
            if (url) {
                $("#titulo-video").html(titulo);
                $("#iframe-video").attr("src", url);
                $('#video-modal').modal();
            }
        }

    </script>
}
