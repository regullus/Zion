@model PagedList.IPagedList<Core.Models.TabuleiroAdminUsuarios>
@using PagedList.Mvc;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var traducaoHelper = (Core.Helpers.TraducaoHelper)ViewBag.TraducaoHelper;
    var associacoes = (IEnumerable<Core.Entities.Associacao>)ViewBag.Associacoes;
    var classificacoes = (IEnumerable<Core.Entities.Classificacao>)ViewBag.Classificacoes;
    var produtos = (IEnumerable<Core.Entities.Produto>)ViewBag.Produtos;
    var meioPagamentos = (IEnumerable<Core.Entities.MeioPagamento>)ViewBag.MeioPAgamento;
    var usuarioEntraOutraAba = ViewBag.UsuarioEntraOutraAba;

    string mascaraData = traducaoHelper["MASCARA_DATA"];
    if (String.IsNullOrEmpty(mascaraData))
    {
        mascaraData = "dd/MM/yyyy hh:mm";
    }
}
@section pageStyles {
    <link rel="stylesheet" href="~/Content/home/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/global/plugins/font-awesome/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800">
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,400,700,900" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/home/styles.css">
}
@section head {}
@section pageScripts {
    <script>
        $('.confirmarPagtoSystem').on('click', function () {
            var idUsuario = $(this).attr("data-id");
            var idBoard = $(this).attr("data-board");
            $('.titulo').html(idUsuario);

            Swal.fire({
                title: "@traducaoHelper["CONFIRMAR_PAGAMENTO_SISTEMA"]",
                icon: 'warning',
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonColor: '#1ba39c',
                denyButtonColor: '#d91e18',
                cancelButtonColor: '#555555',
                confirmButtonText: '@traducaoHelper["FOI_PAGO"]',
                cancelButtonText: '@traducaoHelper["CANCELAR"]',
                denyButtonText: '@traducaoHelper["NAO_FOI_PAGO"]'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                    url: "@Url.Action("FoiPagoSistema")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario,
                        'BoardID': idBoard
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                } else if (result.isDenied) {
                    $.ajax({
                    url: "@Url.Action("NaoFoiPagoSistema")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario,
                        'BoardID': idBoard
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                }
            });

        });

        $('.confirmarPagtoMaster').on('click', function () {
            var idUsuario = $(this).attr("data-id");
            var idBoard = $(this).attr("data-board");
            $('.titulo').html(idUsuario);

            Swal.fire({
                title: "@traducaoHelper["CONFIRMAR_PAGAMENTO_ALVO"]",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#1ba39c',
                denyButtonColor: '#d91e18',
                cancelButtonColor: '#555555',
                confirmButtonText: '@traducaoHelper["FOI_PAGO"]',
                cancelButtonText: '@traducaoHelper["CANCELAR"]',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                    url: "@Url.Action("FoiPagoMaster")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario,
                        'BoardID': idBoard
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                } 
            });
        });

        $('.confirmarEmail').on('click', function () {
            var idUsuario = $(this).attr("data-id");
            Swal.fire({
                title: "@traducaoHelper["CONFIRMAR_EMAIL"]",
                icon: 'warning',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonColor: '#1ba39c',
                denyButtonColor: '#d91e18',
                cancelButtonColor: '#555555',
                confirmButtonText: '@traducaoHelper["SIM"]',
                cancelButtonText: '@traducaoHelper["CANCELAR"]',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                    url: "@Url.Action("ConfirmarEmail")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                } 
            });
        });
    </script>

    <script>
      
      $(".openAlterarSenha").on("click", function () {
         var id = $(this).data('id');
          $('#UsuarioIDAlterarSenha').attr('value', id);

          $("#NovaSenha").val('');
          $("#token2F").val('');

          $(".altera-senha-hide").show();
          $(".msg-altera-senha").text('');
          $("#modal-body-form").show();
          $("#modal-body-footer").show();
          $("#alterar-senha-loader").hide();

          $("#alterarSenha").modal('show');
      });

      $(".ConfirmarAlterarSenha").on("click", function () {

           var id = $('#UsuarioIDAlterarSenha').val();
           var senha = $("#NovaSenha").val();
           var token2F = $("#token2F").val();

           if (senha) {

                $("#alterar-senha-loader").show();
                $(".msg-altera-senha").text('');

               $.post('@Url.Action("AlterarSenha", "Usuarios")', { id: id, senha: senha, token2F: token2F }, function (data) {

                    $("#alterar-senha-loader").hide();

                   if (data.OK) {
                       $(".altera-senha-hide").hide();
                   }

                   $(".msg-altera-senha").text(data.msg);
               });

           }
       });

      $(".cbo").change(function () {
         var persistIDUsusario = $('#impIDUsuario').val();
         $('#impIDUsuario').attr('value', persistIDUsusario);
      });

      function Logar(usuarioID) {
         $.post('@Url.Action("Logar", "Usuarios")', { id: usuarioID }, function (data) {
            if (data != 'Index') {
               window.open(data);
            }
            else{
               Redirect(data);
            }
         });
      }

    </script>
}

@section PageLevelScripts{
    <script type="text/javascript" src="~/Content/scripts/jquery.min.js"></script>
    <script type="text/javascript" src="~/Content/scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Content/scripts/countUp.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/Content/global/plugins/jquery.pulsate.min.js" type="text/javascript"></script>
    <script src="~/Content/global/plugins/jquery-bootpag/jquery.bootpag.min.js" type="text/javascript"></script>
    <script src="~/Content/pages/scripts/ui-general.min.js" type="text/javascript"></script>
}

@section jQueryRead {}

<div class="portlet box grey-gallery">
    <div class="portlet-title">
        <div class="caption"><i class="fa fa-reorder"></i> @ViewBag.Title</div>
        <div class="tools">
            <a href="javascript:;" class="collapse" title="@traducaoHelper["FECHAR"]" />
            <a href='@Url.Action("Reload", "Usuarios")' class="atualizar" title="@traducaoHelper["RELER"]" />
        </div>
        <div class="actions">
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="Todos"} )' class="btn btn-sm blue-chambray">
                <i class="fa fa-users"></i> @traducaoHelper["TODOS"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="InformePagtoSistema"} )' class="btn btn-sm purple-soft">
                <i class="fa fa-cogs"></i> @traducaoHelper["INFORME_PGTO_SISTEMA"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="PagosSistema"} )' class="btn btn-sm green-meadow">
                <i class="fa fa-cogs"></i> @traducaoHelper["PGTO_SISTEMA"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="ConfirmarYellow"} )' class="btn btn-sm yellow-crusta">
                <i class="fa fa-cogs"></i> @traducaoHelper["INFORME_PGTO_SYS"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="ConfirmarRed"} )' class="btn btn-sm red-mint">
                <i class="fa fa-cogs"></i> @traducaoHelper["PGTO_MASTER_SYS"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="InformePagtoMaster"} )' class="btn btn-sm blue-soft">
                <i class="fa fa-bullseye"></i> @traducaoHelper["INFORME_PGTO_MASTER"]
            </a>
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, Tipo="PagoMaster"} )' class="btn btn-sm blue-steel">
                <i class="fa fa-bullseye" "></i> @traducaoHelper["PGTO_MASTER"]
            </a>
            <label>&nbsp;</label>
        </div>
    </div>

    <div class="portlet-body">
        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group">
                            @using (Html.BeginForm("Index", "Usuarios", FormMethod.Get))
                            {
                                @Html.DropDownList("NumeroPaginas", null, htmlAttributes: new { @class = "form-control input-small input-inline marginB05" })
                                <input class="btn purple form-control input-small input-inline fontPlaceHolderIcon" id="Atualizar" name="Atualizar" value="&#xf021; @traducaoHelper["ATUALIZAR"]" type="submit" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    @using (Html.BeginForm("Index", "Usuarios", FormMethod.Post))
                    {
                        <div class="form-group pull-right">
                            <div class="input-group">
                                @Html.TextBox("ProcuraLogin", ViewBag.CurrentProcuraLogin as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["LOGIN_NOME_EMAIL"] })
                                @Html.TextBox("ProcuraPatrocinador", ViewBag.CurrentProcuraPatrocinador as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["PATROCINADOR"] })
                                <input class="btn blue-madison form-control input-small input-inline fontPlaceHolderIcon" id="Procura" name="Procura" value="&#xf002; @traducaoHelper["PROCURAR"]" type="submit" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"] @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"] @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

        <div class="table-scrollable">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th scope="col" style="min-width:90px; width:90px;">&nbsp;@traducaoHelper["ACOES"]</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["LOGIN"], "Index", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "login":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "login_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["NOME"]</th>
                        <th scope="col">@traducaoHelper["EMAIL"]</th>
                        <th scope="col">@traducaoHelper["CELULAR"]</th>
                        <th scope="col">@traducaoHelper["POSICAO"]</th>
                        <th scope="col">@traducaoHelper["GALAXIA"]</th>
                        <th scope="col">@traducaoHelper["PATROCINADOR"]</th>
                        <th scope="col">@traducaoHelper["PAGAMENTO"]</th>
                        <th scope="col">@traducaoHelper["STATUS"]</th>
                        <th scope="col">@traducaoHelper["DATA"]</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th scope="col" style="min-width:90px; width:90px;">&nbsp;@traducaoHelper["ACOES"]</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["LOGIN"], "InformePagamento", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "login":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "login_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["NOME"]</th>
                        <th scope="col">@traducaoHelper["EMAIL"]</th>
                        <th scope="col">@traducaoHelper["CELULAR"]</th>
                        <th scope="col">@traducaoHelper["POSICAO"]</th>
                        <th scope="col">@traducaoHelper["GALAXIA"]</th>
                        <th scope="col">@traducaoHelper["PATROCINADOR"]</th>
                        <th scope="col">@traducaoHelper["PAGAMENTO"]</th>
                        <th scope="col">@traducaoHelper["STATUS"]</th>
                        <th scope="col">@traducaoHelper["DATA"]</th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink("Details", "Details", new { id = item.UsuarioID }, new { @class = "gridDetail", title = traducaoHelper["DETALHES"] + ":" + item.UsuarioID })
                                @if (User.IsInRole("perfilMaster") || User.IsInRole("perfilAdministrador"))
                                {
                                    if (Core.Helpers.ConfiguracaoHelper.GetBoolean("ADM_TROCA_SENHA_RESETAR"))
                                    {
                                        @Html.ActionLink("Senha", "Senha", new { id = item.UsuarioID }, new { @class = "gridLock", title = traducaoHelper["TROCAR_ENVIAR_SENHA"] })
                                    }
                                    else
                                    {
                                        <a class="gridLock openAlterarSenha" name="@item.UsuarioID" id="@item.UsuarioID" data-id="@item.UsuarioID" data-toggle="modal" title=@traducaoHelper["ALTERAR_SENHA"] href="#altearSenha">@traducaoHelper["ALTERAR_SENHA"] </a>
                                    }
                                    if (usuarioEntraOutraAba)
                                    {
                                        @Html.ActionLink("Entrar", "Entrar", new { id = item.UsuarioID }, new { target = "_blank", @class = "gridTrocar", title = traducaoHelper["ENTRAR_COM_LOGIN_USUARIO"] + item.Nome })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Entrar", "Entrar", new { id = item.UsuarioID }, new { @class = "gridTrocar", title = traducaoHelper["ENTRAR_COM_LOGIN_USUARIO"] + item.Nome })
                                    }

                                    if (item.InformePagSistema && !item.PagoSistema)
                                    {
                                        <a class="gridPagtoSistem confirmarPagtoSystem" data-id="@item.UsuarioID" data-board="@item.BoardID" title="@(traducaoHelper["CONFIRMAR_PAGAMENTO"] + " " + traducaoHelper["SISTEMA"] +  ": " + item.Apelido)"></a>
                                    }
                                    if (!item.InformePag && !item.PagoMaster && item.StatusID == 1)
                                    {
                                        <a class="gridConfimRed confirmarPagtoMaster" data-id="@item.UsuarioID" data-board="@item.BoardID" title="@(traducaoHelper["ATIVAR"] + " " + traducaoHelper["SEM_INFORME_PAGAMENTO"] + " " + item.Apelido)"></a>
                                    }
                                    if (item.InformePag && !item.PagoMaster)
                                    {
                                        <a class="gridConfimYellow confirmarPagtoMaster" data-id="@item.UsuarioID" data-board="@item.BoardID" title="@(traducaoHelper["ATIVAR"] + " " + traducaoHelper["COM_INFORME_PAGAMENTO"] + " " + item.Apelido)"></a>
                                    }
                                    if (!item.ConfirmarEmail)
                                    {
                                        <a class="gridConfimEmail confirmarEmail" data-id="@item.UsuarioID" data-board="@item.BoardID" title="@(traducaoHelper["CONFIRMAR_EMAIL"] + " " + item.Apelido)"></a>
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Login)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Celular)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => @traducaoHelper[item.Posicao])
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Galaxia)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Patrocinador)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UsuarioPagNome)
                            </td>
                            <td>
                                @(item.StatusID == 0 ? traducaoHelper["INATIVO"] : item.StatusID == 1 ? traducaoHelper["ATIVO"] : item.StatusID == 2 ? traducaoHelper["CONVITE"] : traducaoHelper["SEM_DADOS"])
                            </td>
                            <td>
                                @item.DataInicio.ToString(mascaraData)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="border-gridFooter">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"]  @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"]  @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

    </div>

</div>

<div id="alterarSenha" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">@traducaoHelper["ALTERAR_SENHA"]</h4>
            </div>
            <div class="modal-body">
                <label class="msg-altera-senha"></label>
            </div>
            <div id="modal-body-form" class="modal-body altera-senha-hide">
                <input type="hidden" name="UsuarioIDAlterarSenha" id="UsuarioIDAlterarSenha" />
                <div class="form-group">
                    <label>Digite a nova senha</label>
                    <input type="text" id="NovaSenha" class="form-control" name="Nova Senha" />
                    <label class="msg-altera-senha"></label>
                </div>
                @if (Core.Helpers.ConfiguracaoHelper.GetString("AUTENTICACAO_DOIS_FATORES") == "true")
                {
                    <div class="form-group">
                        <img src="~/Content/global/img/google-authenticator.jpg" width="20" style="margin-bottom: 3px; margin-right: 5px;" />Token Google Authenticator<br />
                        <input type="text" class="form-control" name="token2F" id="token2F">
                        <a id="validaToken2FADinheiro" style="display:none; color: red;"></a>
                    </div>
                }

            </div>
            <div id="modal-body-footer" class="modal-footer altera-senha-hide">
                <div class="row">
                    <div class="col-md-6">
                        <img src="~/Content/global/img/ajax-loading.gif" id="alterar-senha-loader" />
                    </div>
                    <div class="col-md-6">
                        <button type="button" data-id="0" class="btn btn-circle btn-sm green-seagreen ConfirmarAlterarSenha">@Html.Raw(traducaoHelper["ALTERAR"])</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
