@model PagedList.IPagedList<Core.Entities.Usuario>
@using PagedList.Mvc;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var traducaoHelper = (Core.Helpers.TraducaoHelper)ViewBag.TraducaoHelper;
    var associacoes = (IEnumerable<Core.Entities.Associacao>)ViewBag.Associacoes;
    var classificacoes = (IEnumerable<Core.Entities.Classificacao>)ViewBag.Classificacoes;
    var produtos = (IEnumerable<Core.Entities.Produto>)ViewBag.Produtos;
    var meioPagamentos = (IEnumerable<Core.Entities.MeioPagamento>)ViewBag.MeioPAgamento;
    var usuarioEntraOutraAba = ViewBag.UsuarioEntraOutraAba;

    ViewBag.Title = @traducaoHelper["INFORME_PGTO"];
}
@section pageStyles {
    @Styles.Render("~/Content/home")
    <link rel="stylesheet" href="~/Content/home/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/global/plugins/font-awesome/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800">
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,400,700,900" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/home/styles.css">
}
@section head {}
@section pageScripts {
    <script>
        $('.confirmarPagto').on('click', function () {
            var idUsuario = $(this).attr("data-id");
            var idBoard = $(this).attr("data-board");
            $('.titulo').html(idUsuario);

            Swal.fire({
                title: "@traducaoHelper["CONFIRMAR_PAGAMENTO"]",
                icon: 'warning',
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonColor: '#1ba39c',
                denyButtonColor: '#d91e18',
                cancelButtonColor: '#555555',
                confirmButtonText: '@traducaoHelper["FOI_PAGO"]',
                cancelButtonText: '@traducaoHelper["CANCELAR"]',
                denyButtonText: '@traducaoHelper["NAO_FOI_PAGO"]'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                    url: "@Url.Action("FoiPago")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario,
                        'BoardID': idBoard
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                } else if (result.isDenied) {
                    $.ajax({
                    url: "@Url.Action("NaoFoiPago")",
                    type: "POST",
                    data: {
                        'usuarioID': idUsuario,
                        'BoardID': idBoard
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.toString() == "OK") {
                                location.reload();
                            } else {
                                Swal.fire({
                                    title: '@traducaoHelper["ALERTA"]',
                                    text: data.toString(),
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ALERTA"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["SEM_DADOS"]',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (thrownError.toString() == '@traducaoHelper["TOKEN_INVALIDO"]') {
                            //Reload page
                            location.reload();
                        } else {
                            Swal.fire({
                                title: '@traducaoHelper["ERRO"]: ' + xhr.status + '!',
                                text: '@traducaoHelper["ERRO"]:' + thrownError.toString(),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    });
                }
            });

        });

    </script>
}

@section PageLevelScripts{
    <script type="text/javascript" src="~/Content/scripts/jquery.min.js"></script>
    <script type="text/javascript" src="~/Content/scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Content/scripts/countUp.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/Content/global/plugins/jquery.pulsate.min.js" type="text/javascript"></script>
    <script src="~/Content/global/plugins/jquery-bootpag/jquery.bootpag.min.js" type="text/javascript"></script>
    <script src="~/Content/pages/scripts/ui-general.min.js" type="text/javascript"></script>
}

@section jQueryRead {}

<div class="portlet box grey-gallery">
    <div class="portlet-title">
        <div class="caption titulo"><i class="fa fa-reorder"></i> @traducaoHelper["INFORME_PGTO"]</div>
        <div class="tools">
            <a href="javascript:;" class="collapse" title="@traducaoHelper["FECHAR"]" />
            <a href='@Url.Action("ReloadInformePgto", "Usuarios")' class="atualizar" title="@traducaoHelper["RELER"]" />
        </div>
        <div class="actions">
            <a href='@Url.Action("Index", "Usuarios", new { CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador} )' class="btn btn-sm purple-soft">
                <i class="fa fa-backward"></i> @traducaoHelper["VOLTAR"]
            </a>
            <label>&nbsp;</label>
        </div>
    </div>

    <div class="portlet-body">
        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group">
                            @using (Html.BeginForm("InformePagamento", "Usuarios", FormMethod.Get))
                            {
                                @Html.DropDownList("NumeroPaginas", null, htmlAttributes: new { @class = "form-control input-small input-inline marginB05" })
                                <input class="btn purple form-control input-small input-inline fontPlaceHolderIcon" id="Atualizar" name="Atualizar" value="&#xf021; @traducaoHelper["ATUALIZAR"]" type="submit" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    @using (Html.BeginForm("InformePagamento", "Usuarios", FormMethod.Get))
                    {
                        <div class="form-group pull-right">
                            <div class="input-group">
                                @Html.TextBox("ProcuraLogin", ViewBag.CurrentProcuraLogin as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["LOGIN_NOME_EMAIL"] })
                                @Html.TextBox("ProcuraPatrocinador", ViewBag.CurrentProcuraPatrocinador as string, new { @class = "form-control input-small input-inline fontPlaceHolderIcon marginB05", @placeholder = traducaoHelper["PATROCINADOR"] })
                                <input class="btn blue-madison form-control input-small input-inline fontPlaceHolderIcon" id="Procura" name="Procura" value="&#xf002; @traducaoHelper["PROCURAR"]" type="submit" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("InformePagamento", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"] @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"] @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

        <div class="table-scrollable">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th scope="col" style="min-width:95px; width:95px;">&nbsp;@traducaoHelper["ACOES"]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["LOGIN"], "InformePagamento", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "login":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "login_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["NOME"]</th>
                        <th scope="col">@traducaoHelper["EMAIL"]</th>
                        <th scope="col">@traducaoHelper["CELULAR"]</th>
                        <th scope="col">@traducaoHelper["POSICAO"]</th>
                        <th scope="col">@traducaoHelper["GALAXIA"]</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["PATROCINADOR"], "InformePagamento", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "patrocinador":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "patrocinador_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th scope="col" style="min-width:95px; width:95px;">&nbsp;@traducaoHelper["ACOES"]&nbsp;</th>
                        <th scope="col">
                            @Html.ActionLink(traducaoHelper["LOGIN"], "InformePagamento", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "login":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "login_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                        <th scope="col">@traducaoHelper["NOME"]</th>
                        <th scope="col">@traducaoHelper["EMAIL"]</th>
                        <th scope="col">@traducaoHelper["CELULAR"]</th>
                        <th scope="col">@traducaoHelper["POSICAO"]</th>
                        <th scope="col">@traducaoHelper["GALAXIA"]</th>
                        <th scope="col">
                            @Html.ActionLink(@traducaoHelper["PATROCINADOR"], "InformePagamento", new { SortOrder = ViewBag.FirstSortParm, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize })
                            @switch ((string)ViewBag.CurrentSort.ToString())
                            {
                                case "patrocinador":
                                    {<i class="fa fa-chevron-down"></i>}
                                    break;
                                case "patrocinador_desc":
                                    {<i class="fa fa-chevron-up"></i>}
                                    break;
                            }
                        </th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var associacao = associacoes.FirstOrDefault(a => a.Nivel == item.NivelAssociacao);
                        var classificacao = classificacoes.FirstOrDefault(c => c.Nivel == item.NivelClassificacao);
                        <tr>
                            <td>
                                <a class="gridNovo confirmarPagto" data-id="@item.ID" data-board="@item.TipoID" title="@(traducaoHelper["CONFIRMAR_PAGAMENTO"] + " " + item.Nome)"> @traducaoHelper["CONFIRMAR_PAGAMENTO"]</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Login)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Celular)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => @traducaoHelper[item.Documento])
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => @traducaoHelper[item.SenhaLegado])
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PatrocinadorDireto.Nome)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="border-gridFooter">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("InformePagamento", new { page, SortOrder = ViewBag.CurrentSort, CurrentProcuraLogin = ViewBag.CurrentProcuraLogin, CurrentProcuraPatrocinador = ViewBag.CurrentProcuraPatrocinador, NumeroPaginas = ViewBag.CurrentNumeroPaginas, PageSize = ViewBag.PageSize }))
                </div>
                <div class="col-md-2">
                    <label class="pull-right">@traducaoHelper["PAG"]  @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @traducaoHelper["DE"]  @Model.PageCount &nbsp;</label>
                </div>
            </div>
        </div>

    </div>

</div>
